//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 
namespace Services.Implementations
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "MonitoringControllerBinding", Namespace = "urn:MonitoringControllerwsdl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(QueueWSDL))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DeviceWSDL))]
    public partial class MonitoringControllerService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback loginOperationCompleted;

        private System.Threading.SendOrPostCallback getDeviceOperationCompleted;

        private System.Threading.SendOrPostCallback getQueueOperationCompleted;

        /// <remarks/>
        public MonitoringControllerService()
        {
            this.Url = "http://192.168.16.110/mv/webservice/monitoring/wsdl?ws=1";
        }

        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;

        /// <remarks/>
        public event getDeviceCompletedEventHandler getDeviceCompleted;

        /// <remarks/>
        public event getQueueCompletedEventHandler getQueueCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:MonitoringControllerwsdl#login", RequestNamespace = "urn:MonitoringControllerwsdl", ResponseNamespace = "urn:MonitoringControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string login(string name, string password)
        {
            object[] results = this.Invoke("login", new object[] {
                    name,
                    password});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginlogin(string name, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("login", new object[] {
                    name,
                    password}, callback, asyncState);
        }

        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void loginAsync(string name, string password)
        {
            this.loginAsync(name, password, null);
        }

        /// <remarks/>
        public void loginAsync(string name, string password, object userState)
        {
            if ((this.loginOperationCompleted == null))
            {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                    name,
                    password}, this.loginOperationCompleted, userState);
        }

        private void OnloginOperationCompleted(object arg)
        {
            if ((this.loginCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:MonitoringControllerwsdl#getDevice", RequestNamespace = "urn:MonitoringControllerwsdl", ResponseNamespace = "urn:MonitoringControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public DeviceWSDL[] getDevice(string session)
        {
            object[] results = this.Invoke("getDevice", new object[] {
                    session});
            return ((DeviceWSDL[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetDevice(string session, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getDevice", new object[] {
                    session}, callback, asyncState);
        }

        /// <remarks/>
        public DeviceWSDL[] EndgetDevice(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeviceWSDL[])(results[0]));
        }

        /// <remarks/>
        public void getDeviceAsync(string session)
        {
            this.getDeviceAsync(session, null);
        }

        /// <remarks/>
        public void getDeviceAsync(string session, object userState)
        {
            if ((this.getDeviceOperationCompleted == null))
            {
                this.getDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeviceOperationCompleted);
            }
            this.InvokeAsync("getDevice", new object[] {
                    session}, this.getDeviceOperationCompleted, userState);
        }

        private void OngetDeviceOperationCompleted(object arg)
        {
            if ((this.getDeviceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeviceCompleted(this, new getDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:MonitoringControllerwsdl#getQueue", RequestNamespace = "urn:MonitoringControllerwsdl", ResponseNamespace = "urn:MonitoringControllerwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public QueueWSDL[] getQueue(string session)
        {
            object[] results = this.Invoke("getQueue", new object[] {
                    session});
            return ((QueueWSDL[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetQueue(string session, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getQueue", new object[] {
                    session}, callback, asyncState);
        }

        /// <remarks/>
        public QueueWSDL[] EndgetQueue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((QueueWSDL[])(results[0]));
        }

        /// <remarks/>
        public void getQueueAsync(string session)
        {
            this.getQueueAsync(session, null);
        }

        /// <remarks/>
        public void getQueueAsync(string session, object userState)
        {
            if ((this.getQueueOperationCompleted == null))
            {
                this.getQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQueueOperationCompleted);
            }
            this.InvokeAsync("getQueue", new object[] {
                    session}, this.getQueueOperationCompleted, userState);
        }

        private void OngetQueueOperationCompleted(object arg)
        {
            if ((this.getQueueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQueueCompleted(this, new getQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "urn:MonitoringControllerwsdl")]
    public partial class DeviceWSDL
    {

        private string dialStringField;

        private string nameField;

        public string id { get; set; }

        /// <remarks/>
        public string dialString
        {
            get
            {
                return this.dialStringField;
            }
            set
            {
                this.dialStringField = value;
            }
        }

        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "urn:MonitoringControllerwsdl")]
    public partial class QueueWSDL
    {

        private string nameField;

        public int id { get; set; }
        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void getDeviceCompletedEventHandler(object sender, getDeviceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DeviceWSDL[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DeviceWSDL[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void getQueueCompletedEventHandler(object sender, getQueueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public QueueWSDL[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QueueWSDL[])(this.results[0]));
            }
        }
    }
}